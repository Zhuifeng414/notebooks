# coding: utf-8
get_ipython().magic('cd Documents/Projects/BattellePlay/')
get_ipython().magic('ll ')
get_ipython().magic('cd notebooks/')
get_ipython().magic('ll ')
import pandas as pd
pairs = pd.read_csv('pairs.txt',index_col=['ta','tb','year']
)
pairs
pairs.index.levels[0]
pairs.index.levels[1]
pairs.index.levels[2]
pairs.index.levels[2] == 2005
pairs[pairs.index.levels[2]==2005]
pairs
pairs.ix
pairs.ix[pairs.index.levels[0]==1]
pairs.ix[pairs.index.levels[2]==2005]
pairs.ix[pairs.index.levels[2]==2005][:]
pairs.pairs.index.levels[2].isin(2005)]
pairs[pairs.index.levels[2].isin(2005)]
pairs[pairs.index.levels[2].isin([2005])]
pairs.ix[0]
pairs.ix[0,1]
pairs.ix[0]
pairs.ix[0,1]
pairs.ix[0,1,2005]
pairs.ix[0,1,2006]
pairs.ix[0,:,2006]
pairs.ix[0,1,2006]
pairs.ix[:,'n']
pairs.ix[:10,'n']
pairs.ix[:1,'n']
pairs.ix[0,'n']
pairs.ix[0,1,'n']
pairs.ix[0,'n']
pairs.ix[1,'n']
pairs.ix[2,'n']
pairs.ix[[2,1],'n']
pairs.ix[[2,1],2005,'n']
pairs.ix[[2,1,2005],'n']
pairs.ix['n']
pairs.ix[:,'n']
pairs.iloca[:,:,2005]
pairs.iloca[:,:,:]
pairs.iloc[]
pairs.iloc[0]
pairs.iloc[0,1]
pairs.iloc[0:1]
pairs.iloc[0:10]
pairs.iloc[pairs.index.levels[2]==2005]
pairs.ilod[0:10]
pairs.ilod[:,:]
pairs.iloc[:10]
pairs.iloc[:10,0]
pairs.iloc[:10,1]
pairs.iloc[:10,1]
pairs.iloc[:10,0]
pairs.iloc[2005]
pairs.iloc[2006]
pairs.iloc[20]
pairs.iloc[0]
pairs.iloc[1]
pairs.iloc[2]
pairs.iloc[0,1]
pairs.axes
pairs.filter(items=['n'])
pairs.filter(items=['n'])
pairs.filter(items=['n'])
pairs.filter(items=['n'],like=2)
pairs.filter(items=['n'],like=2)
pairs.filter(items=['n'],like=0)
pairs.filter(items=['n'],like=0)
pairs[2004]
pairs[1]
pairs['1']
pairs
pairs.info()
pairs.columns
pairs['n']
pairs['index_as_col'] = pairs.index
pairs.info()
pairs['index_as_col']
pairs['year'] = pairs.index.level[2]
pairs['year'] = pairs.index.levels[2]
pairs['year'] = pairs.index.levels(2)
pairs['year'] = pairs.index.levels[2]
pairs['year'] = pairs.index[2]
pairs['year'] = pairs.index.item[2]
pairs.info)_
pairs.info()
pairs.drop('index_as_col',axis=1)
pairs.info()
pairs.drop('index_as_col',axis=1,inplace=True)
pairs.info()
pairs.index.levels[2]
pairs.index.
pairs.index.data
pairs.index.data[2]
pairs.index.data
pairs.index.data.tolist
l = pairs.index.data.tolist
l
print(l)
pairs.index[0]
pairs.index[100]
pairs = pd.read_csv('pairs.txt')
pairs.info()
pairs['year']
pairs.groupby['year']
pairs.groupby('year')
pairs.groupby('year').plot()
pairs[['year','n']].groupby('year')
t = pairs[['year','n']].groupby('year')
t
t.info()
print(t)
pairs[['year','n']].groupby('year')
pairs.index
pairs[index]
pairs = pd.read_csv('pairs.txt',index_col=['year'])
pairs[index]
pairs.index
pairs.index[2006]
pairs[index]
pairs.loc[2005]
pairs.loc[2006]
pairs.loc[2006]['ta']
pairs.loc[2006]['n']
pairs.loc[2006:2010]
pairs[2006:2010]
pairs[10,1]
pairs[10,'n']
pairs.loc[10,'n']
pairs.loc[10,0]
pairs.loc[1,0]
pairs.loc[2005,0]
pairs.loc[2005,'n']
pairs.loc[2005,:]
pairs.loc[2005]
pairs.loc[2006]
pairs.loc[2007]
pairs = pd.read_csv('pairs.txt',index_col=['year'])
pairs.index.get_level_values['year']
pairs.index.get_level_values[2]
pairs.index.get_level_values
pairs = pd.read_csv('pairs.txt',index_col=['ta','tb','year'])
pairs.index.get_level_values['year']
pairs.index.get_level_values[2]
pairs.index.get_level_values
pairs.index.get_level_values['year']
pairs.index.get_level_values['ta']
pairs.index.get_level_va
pairs.index.get_level_values['ta']
import sqlite3
get_ipython().magic('ls ')
dbfile = '../battelle.db'
db = sqlite3.connect(dbfile)
doctopic = pd.read_sql_table('doctopic_long',db)
doctopic = pd.read_sql_query('select * from doctopic_long',db)
doctopic.describe()
topicpair = pd.merge(doctopic['topic_weight' > 0.1],doctopic['topic_weight'>0.1],on='topic_id',how='inner')
topicpair = pd.merge(doctopic[doctopic['topic_weight'] > 0.1],doctopic[doctopic['topic_weight']>0.1],on='topic_id',how='inner')
topicpair
topicpair.describe()
topicpair.columns
topicpair = pd.merge(doctopic[doctopic['topic_weight'] > 0.1],doctopic[doctopic['topic_weight']>0.1],on='doc_id',how='inner')
topicpair
topicpair.summary()
topicpair.info()
topicpair[:10]
topicpair.drop(['doc_id'],inplace=True,axis-1)
topicpair.drop(['doc_id'],inplace=True,axis=1)
topicpair.info()
topicpair.describe()
topicpairp['combo_weight'] = topicpair['topic_weight_x'] * topicpair['topic_weight_y']
topicpair['combo_weight'] = topicpair['topic_weight_x'] * topicpair['topic_weight_y']
topicpair.describe()
topicpair[topicpair['combo_weight'] > .9]
topicpair.drop(topicpair['topic_id_x'] == topicpair['topic_id_y'])
topicpair[topicpair['combo_weight'] > .9]
topicpair[topicpair['combo_weight'] > .9]
topicpair.drop(topicpair['topic_id_x'] == topicpair['topic_id_y'],inplace=True)
topicpair[topicpair['combo_weight'] > .9]
topicpair[topicpair['combo_weight'] > .1]
topicpair[topicpair['combo_weight'] < .1]
topicpair[topicpair['combo_weight'] < .5]
topicpair = topicpair.drop(topicpair['topic_id_x'] == topicpair['topic_id_y'],inplace=True)
topicpair = topicpair.drop(topicpair['topic_id_x'] == topicpair['topic_id_y'],axis=0,inplace=True)
topicpair = topicpair[topicpair['topic_id_x'] != topicpair['topic_id_y']]
topicpair
topicpair[topicpair['combo_weight'] > .9]
topicpair[topicpair['combo_weight'] > .5]
topicpair[topicpair['combo_weight'] > .1]
topicpair[topicpair['combo_weight'] > .2]
topicpair[topicpair['combo_weight'] > .3]
topicpair[topicpair['combo_weight'] > .2]
topicpair[topicpair['combo_weight'] > .2]
topicpair.columns
graph1 = topicpair[[]]
graph1 = topicpair[['topic_id_x','topic_id_y']]
graph1
graph1 = topicpair[['topic_id_x','topic_id_y']][topicpair['combo_weight'] > .2]
graph1
graph1.to_csv('graph1.txt')
get_ipython().system('more graph1.txt')
get_ipython().system('more graph1.txt')
with txt as open('graph2.txt') as gtxt:
    for line in gtxt.readlines():
with txt as open('graph2.txt') as gtxt:
    for line in gtxt.readlines():
with open('graph2.txt') as gtxt:
    for line in gtxt.readlines():
        print(line)
        
with open('graph2.txt','r') as gtxt:
    for line in gtxt.readlines():
        print(line)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        print(line)
        
with open('graph2.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        print(line)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        print(line)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        print(line[1:])
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        print(line.split(',')[1:])
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        (src,dst) = line[1:]
        print(src,dst)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        (src,dst) = line[1:]
        print(src,dst)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        src = line[1]
        dst = line[2]
        print(src,dst)
        
with open('graph1.txt','r') as gtxt:
    for line in gtxt.readlines():
        line = line.strip()
        src = line[1]
        dst = line[2]
        print('{} -- {}'.format(src,dst))
        
get_ipython().magic('save')
get_ipython().magic('save PLAY.txt')
get_ipython().magic('save PLAY.txt')
get_ipython().magic('save')
get_ipython().magic("save 'PLAY.txt'")
get_ipython().magic('ls ')
get_ipython().magic("save -c 'PLAY.txt'")
get_ipython().magic("save -r 'PLAY.txt'")
get_ipython().magic("save 'PLAY.txt'")
get_ipython().magic('save')
out = open('h1.txt','w')
get_ipython().magic('save out')
get_ipython().magic('clear ')
get_ipython().magic('ls ')
get_ipython().magic('ls -l')
get_ipython().magic('rm h1.txt')
get_ipython().magic('ll ')
get_ipython().magic('rm pairs.db')
get_ipython().magic('ll ')
get_ipython().magic('more graph1.txt')
get_ipython().magic('history')
get_ipython().magic('save h.py')
